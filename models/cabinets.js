// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
var _ = require('lodash');

module.exports = (mongoose, Mongoose) => {
  // This section contains the properties of your model, mapped to your collection's properties.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const schema = Mongoose.Schema({
    'location': {
      type: Object,
      coordinates: [Number],
      formattedAddress: String,
      street: String,
      city: String,
      state: String,
      zipcode: String,
      country: String,
    },
    'dailyInfo': {
      open: String,
      close: String,
    },
    'name': String,
    'createdAt': Date,
    'openDaily': Boolean,
    'owned': Boolean,
    'clientSurvey': {
      question: String,
    },
    'Token': [String],
    'powerBanks': String,
    'location_name': String,
    'version': String,
    'slug': String,
    'venueDisplayPic': [String],
    'theme': {
      logo: String,
      secondaryColor: String,
      mainColor: String,
    },
    'address': String,
    'lastSeen': Date,
  }, {
    timestamps: false,
    typeKey: '$type',
  });

  schema.post('findOne', function(result) {
    const location = flattenObj(result.location, 'location');
    const theme = flattenObj(result.theme, 'theme');
    _.merge(result, location, theme);
  });

  const cabinets = mongoose.model('cabinets', schema, 'cabinets');
  return cabinets;
};

function flattenObj(obj, parent, res = {}){
  for(let key in obj){
//    let propName = parent ? parent + '_' + key : key;
    let propName = parent ? parent + capitalize(key) : capitalize(key);
    if(typeof obj[key] === 'object'){
          flattenObj(obj[key], propName, res);
      } else {
          res[propName] = obj[key];
      }
  }
  return res;
}

const capitalize = (s) => {
  if (typeof s !== 'string') return ''
  return s.charAt(0).toUpperCase() + s.slice(1)
}
